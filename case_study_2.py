# -*- coding: utf-8 -*-
"""Case Study 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bl50fsgojhOtgfzmcjP8-dYsfMWFRE_q
"""

!pip install pygal

import pandas as pd
import numpy as np
import seaborn as sns
import pygal
from google.colab import drive
import matplotlib.pyplot as plt
from matplotlib_venn import venn2,venn3

drive.mount('/content/drive')

df = pd.read_csv('/content/drive/MyDrive/casestudy.csv')

df.info()

"""**Let us do some Exploratory data analysis below to familiarize ourself with the data**

Renaming first column to Index
"""

df.head()

df.rename(columns={'Unnamed: 0': 'Index'})

df.isnull().sum()

"""There are no null values in the dataset which is a great thing from the perspective of data preprocessing"""



"""Finding the latest year(current in terms of data) in the dataset given

# Now we generate solutions and insights that the case requires.
"""

curr_year = df['year'].unique().max()
print("The most current year in the given data is", curr_year)

curr_year_revenue = df.year.value_counts()[2017]
print("The total net revenue generated in the year 2017 is:", curr_year_revenue)

"""

*   NEW CUSTOMER REVENUE



"""

print("Visualizing customers and revenues by their years")

customers_py = pd.DataFrame({'Year':['2015', '2016', '2017'], 
                           'Number of Customers':[df.year.value_counts()[2015],
                                                  df.year.value_counts()[2016],
                                                  df.year.value_counts()[2017]]})
customers_py

sns.barplot(x="Year", y="Number of Customers", data=customers_py)

revenue_py = pd.DataFrame({'Year':['2015', '2016', '2017'], 'Total Revenue':[df[df.year==2015].net_revenue.sum(), df[df.year==2016].net_revenue.sum(),df[df.year==2017].net_revenue.sum()]})
revenue_py

sns.barplot(x="Year", y="Total Revenue", data=revenue_py, saturation=0.7)

"""# New customers per year

**To find the new customers in the year, we have to
"""

cust_2015 = df[df.year==2015]
cust_2016 = df[df.year==2016]
cust_2017 = df[df.year==2017]

# cust_2015 = cust_2015['customer_email']
# cust_2016 = cust_2016['customer_email']
# cust_2017 = cust_2017['customer_email']

cust_2017

#find new customers in 2016
#we find unique customers from 2016 and remove customers that are from 2015
uniq2016 = set(cust_2016['customer_email'])-set(cust_2015['customer_email'])

print("New customers who joined in 2016 only are", len(uniq2016))
print("--------------------------------------------------")
print("We also get additional information from this venn diagram")
venn2([set(cust_2015['customer_email']), set(cust_2016['customer_email'])], set_labels=(2015, 2016))
plt.show()
print("The green area is the customers gained")

#find new customers in 2017
#we find unique customers from 2017 and remove customers that are occuring in 2016 and 2015
uniq2017 = set(cust_2017['customer_email']) - set(cust_2016['customer_email']) - set(cust_2015['customer_email'])
print("New customers who joined in 2016 only are", len(uniq2017))
print("--------------------------------------------------")
print("We also get additional information from this venn diagram")

plt.figure(figsize=(8,8))
venn3([set(cust_2017['customer_email']), set(cust_2016['customer_email']), set(cust_2015['customer_email'])], set_labels=(2017, 2016, 2015))
plt.show()

print("The red area is the customers gained")

new_cust = pd.DataFrame({'Year':['2016', '2017'], 'New Customers':[len(uniq2016), len(uniq2017)]})
new_cust

ax = new_cust.plot.bar(x='Year', y='New Customers',  title = ' New Customers for 2016 and 2017')

"""# New Customer Revenue"""

rev_2016_new_cust=cust_2016.loc[cust_2016['customer_email'].isin(list(uniq2016))]
rev_2016_new_cust.net_revenue.sum()

rev_2017_new_cust=cust_2017.loc[cust_2017['customer_email'].isin(list(uniq2017))]
rev_2017_new_cust.net_revenue.sum()

to_plot_df = pd.DataFrame({'Year':['2016', '2017'], 'New_Customers_total_Revenue':[rev_2016_new_cust.net_revenue.sum(), rev_2017_new_cust.net_revenue.sum()]})
to_plot_df

ax = to_plot_df.plot.bar(x='Year', y='New_Customers_total_Revenue', rot=0, title = 'New Customers Total Revenue for 2016 and 2017')

cust_2015 = cust_2015.drop(columns=['Unnamed: 0'])

cust_2016 = cust_2016.drop(columns=['Unnamed: 0'])
cust_2017 = cust_2017.drop(columns=['Unnamed: 0'])

cust_2015

"""# Existing customer growth"""

exist_16 = pd.merge(cust_2015,cust_2016,on='customer_email')

exist_16['revenue_growth'] = exist_16.net_revenue_y - exist_16.net_revenue_x
print( "Growth in revenue from 15 to 16 is ",exist_16.revenue_growth.sum())
len(exist_16)

exist_17 = pd.merge(cust_2016,cust_2017,on='customer_email')
# caculate the revenue growth
exist_17['revenue_growth'] = exist_17.net_revenue_y - exist_17.net_revenue_x
print("Growth in revenue from 16 to 17 is ",exist_17.revenue_growth.sum())
len(exist_17)

to_plot_df = pd.DataFrame({'Year':['2015-2016', '2016-2017'], 'Existing Customers numeber':[len(exist_16), 
                                                                         len(exist_17)]})
to_plot_df

ax = to_plot_df.plot.bar(x='Year', y='Existing Customers numeber', title = 'Existing Customers')

to_plot_df = pd.DataFrame({'Year':['2015-2016', '2016-2017'], 'revenue change':[exist_16.revenue_growth.sum(), 
                                                                         exist_17.revenue_growth.sum()]})
to_plot_df

ax = to_plot_df.plot.bar(x='Year', y='revenue change', title = 'Change in revenue')

"""#Customers Lost to Attrition


*   This means we have to calculate customers that do not carry forward from 1 year to another


*   This should be similar to calculating customers gained
*   I wont be visualizing the venn diagrams since I have already done it above




"""

lost_16 = set(cust_2015['customer_email'])-set(cust_2016['customer_email'])
len(lost_16)
lost_16

lost_17 =  set(cust_2016['customer_email'])-set(cust_2017['customer_email'])
len(lost_17)

to_plot_df = pd.DataFrame({'Year':['2015-2016', '2016-2017'], 'Customers lost':[len(lost_16), len(lost_17)]})
to_plot_df

ax = to_plot_df.plot.bar(x='Year', y='Customers lost', rot=0, title = 'Customer Lost over the years')

"""#Revenue lost from attrition

"""

exist_17

rev_lost_2016 = cust_2015.loc[cust_2015['customer_email'].isin(lost_16)]
print("Revenue lost in 2016 is:",rev_lost_2016.net_revenue.sum())

rev_lost_2017 = cust_2016.loc[cust_2016['customer_email'].isin(lost_17)]
print("Revenue lost in 2017 is:",rev_lost_2017.net_revenue.sum())

to_plot_df = pd.DataFrame({'Year':['2015-2016', '2016-2017'], 'Revenue lost':[rev_lost_2016.net_revenue.sum(), rev_lost_2017.net_revenue.sum()]})
to_plot_df

ax = to_plot_df.plot.bar(x='Year', y='Revenue lost', rot=0, title = 'Revenue Lost over the years')